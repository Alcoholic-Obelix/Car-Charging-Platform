@model IEnumerable<pweb1920.DAL.Reservation>

@{
    ViewBag.Title = "Reservations";
}

<div class="row">
    <div class="col-md-12">
        <h2>
            <span>Reservations</span>
            <a class="btn btn-success btn-sm pull-right" href="@Url.Action("Create", "Reservations")" role="button">
                <span class="glyphicon glyphicon glyphicon-plus"></span> Add reservation
            </a>
        </h2>
        <div class="table-responsive">
            <table class="table table-bordered text-center">
                <thead>
                    <tr>
                        <th>
                            @Html.DisplayNameFor(model => model.TimeStart)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.TimeFinish)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.ServiceCode)
                        </th>
                        <th>
                            @Html.DisplayNameFor(model => model.EstimatedCost)
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr @*onclick="location.href = '@(Url.Action("Details", "Reservations", new { id = item.Id }))'"*@ style="cursor: pointer" class="row-hover">
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeStart)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.TimeFinish)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.ServiceCode)
                            </td>
                            <td>
                                @Html.DisplayFor(modelItem => item.EstimatedCost)
                            </td>
                        </tr>
                    }
                    @for (var i = 0; i < (10 - Model.Count()); i++)
                    {
                        <tr>
                            <td>
                                --
                            </td>
                            <td>
                                --
                            </td>
                            <td>
                                --
                            </td>
                            <td>
                                --
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

<!-- Button trigger modal -->
<button type="button" class="btn btn-primary btn-lg" data-toggle="modal" data-target="#myModal" data-whatever="getbootstrap">
    Launch demo modal
</button>

<!-- Modal -->
<div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="myModalLabel">Modal title</h4>
            </div>
            <div class="modal-body">
                ...
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary">Save changes</button>
            </div>
        </div>
    </div>
</div>

<script type="text/javascript">
    $(function () {
      $('#myModal').on('show.bs.modal', function (event) {
        var button = $(event.relatedTarget) // Button that triggered the modal
        var recipient = button.data('whatever') // Extract info from data-* attributes
        // If necessary, you could initiate an AJAX request here (and then do the updating in a callback).
        // Update the modal's content. We'll use jQuery here, but you could use a data binding library or other methods instead.
        var modal = $(this)
        modal.find('.modal-title').text('New message to ' + recipient)
        modal.find('.modal-body input').val(recipient)
    })
    });
</script>